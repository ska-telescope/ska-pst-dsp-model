function data_header = read_dada_file(file_id, verbose_)
  % Read from a DADA file, given some file_id
  %
  % Args:
  %   file_id (numeric): The DADA file's file id as generated by `fopen`
  %   verbose_ (bool): Optional. Verbosity flag. Defaults to false.
  % Returns:
  %   cell: cell array containing the data and header.

  verbose = 0;
  if exist('verbose_', 'var')
    verbose = verbose_;
  end


  hdr_map = read_header(file_id);
  n_dim = str2num(hdr_map('NDIM'));
  n_pol = str2num(hdr_map('NPOL'));
  n_bit = str2num(hdr_map('NBIT'));
  n_chan = str2num(hdr_map('NCHAN'));
  dtype = 'single';
  if n_bit == 64
    dtype = 'double';
  end

  if verbose
    fprintf('read_dada_file: dtype=%s\n', dtype);
  end
  % ensure that we're reading only the data we want
  hdr_size = str2num(hdr_map('HDR_SIZE'));
  frewind(file_id);
  % `fread` reads sequentially, so we'll advance the file by hdr_size bytes
  % before reading the actual data buffer.
  fread(file_id, hdr_size, 'uint8');
  data = fread(file_id, dtype);
  data = reshape_dada_data(data, n_dim, n_pol, n_chan);
  data_header = {data, hdr_map};
end
